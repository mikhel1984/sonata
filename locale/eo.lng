return {
---------- locale/eo.lng ----------
language = 'Esperanto',
authors  = [[Stanislav Mikhel]],
---------- dialog nil
Dialog = {
["intro"]                = [[-------- help([functio]) = akiri helpon -----------
---------- use([modulo]) = piliigi la funcionalidad
----------------- quit() = finu -------------------
]],
["done"]                 = [[Preta.]],
["use_import"]           = [[
Alvoku
  use 'modulo' aǔ use {'moduloA','moduloB' ...}
por akiri ekstrajn modulojn.
]],
},
---------- array.lua ----------
array = {
["set(tInd,v)"]          = [[Aldonu valoro al la tabelo. Indico estas tablo.]],
["dim()"]                = [[Redonas dimension de la tabelo.]],
["concat(A,iAxis)"]      = [[Kombini tabeloj laǔ donita akso.]],
["copy()"]               = [[Kreu kopion de la tabelo.]],
[" {n1,n2,..}"]          = [[Krei malplenan tabelon. Dimensio estas tablo.]],
["ipairs()"]             = [[Revenas funkcion por preterpasi ĉiujn indicojn kaj valorojn.]],
[":zip(fn, ...)"]        = [[Aplikas funkcion al la valoroj de du tabeloj. Redonas novan tabelon.]],
["map(fn)"]              = [[Aplikas funkcion al la tabelo. Redonas novan tabelon.]],
["sub(tInd1,tInd2)"]     = [[Redonas la parton de tabelo limigita de 2 indicoj.]],
["get(tInd)"]            = [[Redonai elementon de tabelo.]],
["isEqual(A)"]           = [[Kontroli egalecon de dimensioj.]],
["capacity()"]           = [[Maksimuma nombro da elementoj en la tabelo. La sama kiel #A.]],
["__module__"]           = [[Manipuladoj kun la tabelo de elementoj. Indeksado komencoj de unu. Indico estas tablo.]],
--["comparison"]           = [[a == b, a ~= b]],
},
---------- asciiplot.lua ----------
asciiplot = {
["copy()"]               = [[Kreu kopion de objekto.]],
["addString(ir,ic,s)"]   = [[Aldonu vorton ĉe donita pozicio.]],
["addPoint(dx,dy,s)"]    = [[Aldonu punkton (dx,dy) per simbolo 's'.]],
["addPose(ir,ic,s)"]     = [[Aldonu signon s ĉe la donita pozicio.]],
[" ([iWidth=75,iHeight=23])"] = [[Kreu novan diagramon.]],
["scale(factor,[bDefault=false])"] = [[Skali la diagramon rilate al la komenca grandeco.]],
["plot(...)"]            = [[Montru argumentojn 't', 't1,t1', 'fn,nm', 'fn1,fn2' ktp.]],
["bar(t,[vy=2,ix=1])"]   = [[Bardiagramo.Plot bar diargram for data. vy estas aŭ indekso en t aŭ tabelo de y-j.]],
["reset()"]              = [[Preparu malplenan kanvason.]],
[":concat(...)"]         = [[Horizontala kuniĝo de grafikaĵoj de egala alteco.]],
["__module__"]           = [[Vidigo de datumoj kun pseŭdografioj.]],
["tplot(t,[{yfix=false}])"] = [[Vidigo de tabelaj datumoj, vi povas specifi la kolumnombrojn.]],
["contour(F,fn,[{view='XY'}])"] = [[Trovu konturojn de projekcio por funkcio fn(x,y). Vidoj: XY, XZ, YZ, XYZ.]],
},
---------- bigint.lua ----------
bigint = {
["abs()"]                = [[Absoluta valoro.]],
["eq(B)"]                = [[Egaleco kontrolo.]],
[" (v)"]                 = [[Krei novan arbitra longa entjero bazitan sur la nombro, teksto aǔ tablo.]],
["rebase(N)"]            = [[Konvertu numbrom al nova numbrosistemo.]],
["float()"]              = [[Prezenti grandan entjeron en nombra formo se eble.]],
["base()"]               = [[Radikso por nombro.]],
[":random(B)"]           = [[Hazarda nombro de 0 al B.]],
["factorize()"]          = [[Listo de primaj faktoroj.]],
["at(N)"]                = [[Akiru N-an ciferon.]],
["gcd(B)"]               = [[Plej granda komuna faktoro.]],
["isPrime([sMethod])"]   = [[Kontrolante numeron por simpleco. Metita metodo 'Fermat' por usi la etan teoremon de Fermat.]],
["fact()"]               = [[Revenas faktorialon de la ne indika entjera nombro n.]],
["__module__"]           = [[Operacioj kun la arbitraj longaj entjeroj.]],
--["comparison"]           = [[a<b, a<=b, a>b, a>=b, a==b, a~=b]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a%b, a^b, -a, #a]],
},
---------- complex.lua ----------
complex = {
["asinh()"]              = [[Hyperbola sinusarko de kompleksa nombro.]],
["arg()"]                = [[Revenas la argumenton de kompleksa nombro.]],
["exp()"]                = [[Kompleksa eksponento.]],
["tanh()"]               = [[Hyperbola tangento de kompleksa nombro.]],
[" ([vRe=0,vIm=0])"]     = [[Krei novan kompleksan nombron.]],
["acosh()"]              = [[Hyperbola kosinusarko de kompleksa nombro.]],
["round([N=6])"]         = [[Rondu nombron, difini kvanto de dekumaj ciferoj.]],
["cos()"]                = [[Kosinuso de kompleksa nombro.]],
["atan()"]               = [[Tangentarko de complexa nombro.]],
["atanh()"]              = [[Hyperbola tangentarko de kompleksa nombro.]],
["re()"]                 = [[Reala parto.]],
["tan()"]                = [[Tangento de kompleksa nombro.]],
["log()"]                = [[Kompleksa logaritmo.]],
["sqrt()"]               = [[Kvadrata radiko. Rezulto povas esti vera aǔ imaginara nombro.]],
["sinh()"]               = [[Hyperbola sinuso de kompleksa nombro.]],
["sin()"]                = [[Kompleksa sinuso.]],
["abs()"]                = [[Revenas la modulo de kompleksa nombro.]],
["conj()"]               = [[Kompleksa konjugata nombro. Egale al ~C.]],
["im()"]                 = [[Kompleksa parto.]],
[":i([v=1])"]            = [[Redonas v*i.]],
[":trig(vModule,vAngle)"] = [[Uzi geometria prezento por kompleksa nombro.]],
["asin()"]               = [[Sinusarko de kompleksa nombro.]],
["cosh()"]               = [[Hyperbola kosinuso de kompleksa nombro.]],
["acos()"]               = [[Kompleksa kosinusarko.]],
["__module__"]           = [[Operacioj kun la kompleksaj nombroj.]],
--["comparison"]           = [[a==b, a~=b]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^b, -a]],
},
---------- const.lua ----------
const = {
["phi.Da"]               = [[Atommasunuo.]],
["astro.pc"]             = [[Unu parsek.]],
["phy.e"]                = [[Electrono ŝarĝo.]],
["phy.sigma"]            = [[Konstanto de Stefan-Boltzmann.]],
["phy.NA"]               = [[Nombro de Avogadro.]],
["math.phi"]             = [[Ora proporcio.]],
["math.pi"]              = [[Ratio de cirkvarmo de rondo al ĝia diametro.]],
["phy.c"]                = [[Rapido de lumo.]],
["phy.Rinf"]             = [[Konstanto de Rydberg.]],
["phy.Vm"]               = [[Unu mole de ideala gaso volumo.]],
["phy.g"]                = [[Senpaga akcelo.]],
["phy.G"]                = [[Gravita konstanto.]],
["math.e"]               = [[Bazo de la natura logaritmo.]],
["phy.k"]                = [[Konstanto de Boltzmann.]],
[":add(sName,value,[sUnits])"] = [[Krei tempan konstanton.]],
[":remove(sName)"]       = [[Forigi konstantan.]],
["astro.au"]             = [[Aastronomia unuo.]],
["phy.h"]                = [[Konstanto de Planck.]],
["astro.ly"]             = [[Unu uma jaro.]],
["phy.eps0"]             = [[Elektra konstanto.]],
["phy.mu0"]              = [[Magneta konstanto.]],
["phy.R"]                = [[Universaa gaso konstanto.]],
["__module__"]           = [[Iuj konstantaj valoroj.]],
},
---------- data.lua ----------
data = {
[":geomean(t,[tw])"]     = [[La geometria meznombro.]],
[":std(t,[tw])"]         = [[Norma devio kaj vario. Pezoj povas esti prenita en konto.]],
[":is(t,fn)"]            = [[Trovu pezon uzante bulean funkcion.]],
[":mean(t,[tw])"]        = [[Kalkuli averaĝo. Pezoj povas esti prenita en konto.]],
[":zip(fn,...)"]         = [[Sinsekve apliki funkcion al la listo de vektoroj.]],
[":tcdf(d,N)"]           = [[Akumula distribuo-funkcio de la Studento.]],
[":freq(t)"]             = [[Revenas tablon kun la oftecoj de elementoj.]],
[":histcounts(X,[rng=10])"] = [[Distribuado de nombroj per intertempoj. La gamo povas esti aro kun nombro aŭ listo de limoj.]],
[":tpdf(d,N)"]           = [[Dissendo denseco de la Studento.]],
[":Fn(sExpr,[iArg=2])"]  = [[Generu funkcion el esprimo de x1, x2 ktp.]],
[":max(t)"]              = [[La plej granda nombro kaj ĝia indekso.]],
[":cov(t)"]              = [[Trovu kunvarianca matrico.]],
[":xLt(d)"]              = [[Revenas funkcio por kondiĉo x < d.]],
[":xIn(d1,d2)"]          = [[Revenas funkcio por kondiĉo d1 <= x <= d2.]],
[":ref(t,[iBeg=1,iEnd=#t])"] = [[Akiru referencon al la gamo de elementoj.]],
[":xEq(d)"]              = [[Revenas funkcio por kondiĉo x == d.]],
[":filter(t,vCond)"]     = [[Akiru rezulton de la tabelfiltrado. Kondiĉo estas aŭ bulea funkcio aŭ tabelo de pezoj.]],
[":harmmean(t,[tw])"]    = [[Harmona meznombro.]],
[":csvwrite(sFile,t,[char=',',bCol=false])"] = [[Savi Lua tabulon kiel dosieron kun delimitilo disigita datumojn.]],
[":csvread(sFile,[delim=',',bCol=false])"] = [[Legas datumojn disigitaj per delimitilo en la dosiero, revenas Lua tabulon.]],
[":isNot(t,fn)"]         = [[Trovu inversan pezon uzante bulean funkcion.]],
[":median(t)"]           = [[Mezo de la listo.]],
[":xGt(d)"]              = [[Revenas funkcio por kondiĉo x > d.]],
[":sum(t)"]              = [[Kalkuli sumon de ĉiuj elementoj.]],
[":moment(N,t,[tw])"]    = [[Momento de t kun N ordo, tw estas listo de pezoj.]],
[":min(t)"]              = [[La plej malgranda nombro kaj ĝia indekso.]],
[":cov2(t1,t2)"]         = [[Trovu kunvariancon por du vektoroj.]],
["__module__"]           = [[Prilaborado de datumoj kaj statistiko.]],
},
---------- geodesy.lua ----------
geodesy = {
[":deg2dms(d)"]          = [[Revenas gradoj, minutoj kaj sekundoj por donita angulo.]],
[":toENU(tBLr,tXYZr,tCatr)"] = [[Akiru topocentrajn koordinatojn de punkto en referenca kadro.]],
["toBLH(tXYZ)"]          = [[Konvertas kartezajn koordinatojn al geodeziaj koordinatoj.]],
[":hashDecode(sHash)"]   = [[Trovu centran punkton kaj gamon de la zono.]],
["toXYZ(tBLH)"]          = [[Konvertado de geodeziaj koordinatoj al karteziaj koordinatoj.]],
["A.blhInto[B]"]         = [[Revenas funkcion por konverti geodeziajn koordinatojn de sistemo A al B per la Molodensky metodo.]],
[":fromENU(tBLr,tXYZr,tTop)"] = [[Akiru kartezajn koordinatojn de loka punkto en referenca kadro.]],
["A.xyzInto[B]"]         = [[Revenas funkcion por konverti koordinatojn de sistemo A al B.]],
["solveInv(BLH1,BLH2)"]  = [[Solvu inversan geodezian problemon, trovu distancon kaj azimutojn por du punktoj.]],
["solveDir(BLH,azimuth,dist)"] = [[Solvu rektan geodezian problemon, trovu duan punktan pozicion kaj ĝian orientiĝon se la unua punkto, azimuto kaj distanco estas donitaj.]],
["projGK(tBL)"]          = [[Reiru norden kaj orienten poziciojn de la punkto post projekcio de Gauss-Kruger.]],
[":grav(dB)"]            = [[Internacia gravita formulo, angulo en gradoj.]],
[":dms2rad(d,[m=0,s=0])"] = [[Konvertas gradojn, minutojn kaj sekundojn al radianoj.]],
[":hashEncode(t[,N=6])"] = [[Trovu haŝvaloro por la donita punkto.]],
["projM(tBL)"]           = [[Reiru norden kaj orienten poziciojn de la punkto post projekcio de Mercator.]],
["__module__"]           = [[Kunordigi transformoj kaj aliaj geodeziaj taskoj.]],
},
---------- gnuplot.lua ----------
gnuplot = {
[":tplot(v[,x,y1,y2..])"] = [[Grafikaĵo surbaze de tabelo, matrico aŭ dosiero. Laŭvolaj elementoj difinas kolumnojn.]],
[":plot(x1[,y1,nm,x2,..])"] = [['x' - listo de nombroj, 'y' - listo aŭ funkcio, 'nm' - kurba nomo.]],
[":surfplot(x1,y1,fn1,[nm,x2,y2..])"] = [[Grafikaĵo surfacan funkcion. 'x' kaj 'y' estas listoj de nombroj, 'fn' estas funkcio de du argumentoj, 'nm' estas la nomo.]],
["show()"]               = [[Konstrui funkcian grafeon. Parametroj estas specifita en Lua table G.]],
["copy()"]               = [[Krei kopion la parametroj de grafeo.]],
["add(tCurve)"]          = [[Aldonu novan funkcion al la grafiko.]],
[":polarplot(x1,y1,[nm,x2,y2..])"] = [[Grafikaĵo en polusaj koordinatoj. 'x' - listo de nombroj, 'y' - listo aŭ funkcio, 'nm' - kurba nomo.]],
[" ()"]                  = [[Krei tablon por 'Gnuplot'.]],
[":tpolar(v,[x,y1,y2..])"] = [[Polusa intrigo por tabelo, matrico aŭ dosiero. Laŭvolaj elementoj difinas kolumnojn.]],
["keys"]                 = [[  Priskribo de parametroj:
{math.sin, title='sin'}                      -- grafeon por Lua funkcio, aldoni priskribon
{'sin.dat', ln=1, lw=2}                      -- grafeon por datumndosieron, specifi koloron kaj dikecon
{tbl, with='lines'}                          -- grafeon por Lua tabulo, uzi linioj
title='Graph name'                           -- apudskribo
xrange={0,10}                                -- gamo x de 0 ĝis 10
yrange={-2,2}                                -- gamo y
zrange={0,5}                                 -- gamo z
trange={1,2}                                 -- gamo por parametria funkcio
xtitle='A', ytitle='B'                       -- aksaj nomoj
terminal='jpeg'                              -- savi la rezulton kiel jpeg bildon
output='my_plot.jpg'                         -- dosiernomo
parametric=true                              -- parametria grafeo
size='square'                                -- kvadrata bildo
polar=true                                   -- uzi polusa grafeo
grid='polar'                                 -- polusa koordinata sistemo
legend=false                                 -- malebligi priskribon
surface=true                                 -- tridimensia grafeo
samples=200                                  -- nombro da punktoj
raw='set pm3d'                               -- fiksi la Gnuplot parametrojn permane 
]],
[":tsurf(v,[x1,y1,z1,z2..])"] = [[Grafikaĵo surfacan funkcion surbaze de tablo, matrico aŭ dosiero. Laŭvolaj elementoj difinas kolumnojn.]],
["__module__"]           = [[Interfaco por laborado kun Gnuplot de Lua.]],
},
---------- graph.lua ----------
graph = {
["edges()"]              = [[Listo de grafeaj randoj.]],
["isWeighted()"]         = [[Kontrolu se la randoj havas pezon malsama al 1.]],
["pathD(vStart,[vGoal])"] = [[Trovi la plej mallongan vojon uzanta Dijkstra algoritmon.]],
["dfs(vStart,vGoal)"]    = [[Profundo unua serĉo. Reveni rezulto kaj trovita vojon.]],
["copy()"]               = [[Akiri copion de la grafeo.]],
["remove(v)"]            = [[Forigi nodo aŭ rando de la grafeo.]],
["add(v)"]               = [[Aldoni novan nodo aŭ rando.]],
["pathBF(vStart,[vGoal])"] = [[Trovi la plej mallongan vojon uzanta Bellman-Ford algoritmon.]],
["bfs(vStart,vGoal)"]    = [[Larĝa unua serĉo. Reveni rezulto kaj trovita vojon.]],
[" {v1,v2,..}"]          = [[Krei novan grafeon.]],
["isComplete()"]         = [[Kontroli plenecon de la grafeo.]],
["isNegative()"]         = [[Kontrolu se la randoj havas negativaj pezoj.]],
["nodes()"]              = [[Listo de nodoj.]],
["isDirected()"]         = [[Kontroli se la grafeo havas direktajn randojn.]],
["__module__"]           = [[Operacioj kun grafeoj. Nodo estas sola nomo. Rando estas tabulo de du nomoj.]],
},
---------- lens.lua ----------
lens = {
[":solve(fn,ind,d0)"]    = [[Determinu la kondiĉojn sub kiuj la komponanto kun donita indekso estas egala al 0.]],
["transform(dy,dV)"]     = [[Trovu la transformon de la pozicio 'dy' kaj optika angulo 'dV' (= v*n) de la trabo per la sistemo. Same kiel L(dy,dV).]],
[":gaussSize(dW0,dLam,dist)"] = [[Trovu gaŭsan radioradiuson kaj kurbecon je iu distanco.]],
["beam(dW,dR,dLam)"]     = [[Trovu la elirradiason kaj kurbecon.]],
[":ref(dr,dn1,dn2)"]     = [[Liveras la matricon por refrakto.]],
[":trans(dt,dn)"]        = [[Liveras la matricon por movi la trabon.]],
[":gausParam(dW0,dLam)"] = [[Trovu diverĝan angulon kaj Rayleigh-intervalon por Gaŭsa radio..]],
["isUnit()"]             = [[Kontrolante ĉu matrico estas identeco.]],
["copy()"]               = [[Kreu kopion de objekto.]],
[":mirror(dr,dn)"]       = [[Liveras la matricon por la spegulo.]],
[":thin(df)"]            = [[Liveras la matricon por maldika lenso kun la donita fokusa distanco.]],
["det()"]                = [[Matrica determinanto.]],
[":afocal(dm)"]          = [[Liveras la matricon por la afoka sistemo.]],
["cardinal([dn1=1,dn2=1])"] = [[Determini la pozicion de la kardinalaj punktoj de la sistemo rilate al la eniga kaj eligo ebenoj.]],
[" {dA,dB,dC,dD}"]       = [[Kreu komponanton kun la donitaj parametroj.]],
["inv()"]                = [[Inversa matrico.]],
["__module__"]           = [[Matricaj metodoj en paraksiala optiko.]],
--["operations"]           = [[L1 == L2, L1 .. L2]],
},
---------- main.lua ----------
main = {
["_ans"]                 = [[Resulto de la lasta operacio.]],
["exp(d)"]               = [[La eksponenta dependeco.]],
["sinh(d)"]              = [[Hyperbola sinuso.]],
["acosh(x)"]             = [[La hiperbola kosinusarko de nombro x.]],
["randn([dMean=0,dev=1])"] = [[Normale distribuita hazarda nombro.]],
["Range(dBegin,dEnd,[dStep])"] = [[Faru tabelon kun vico da nombroj.]],
["asin(d)"]              = [[La sinusarko de nombro d.]],
["log(dPos)"]            = [[Natura logaritmo.]],
["_pi"]                  = [[Nombro pi.]],
["Type(v)"]              = [[Montri objektan tipon.]],
["Round(f,[N=0])"]       = [[Rondu nombron, difini kvanto de dekumaj ciferoj.]],
["sin(d)"]               = [[La sinuso de nombro d.]],
["cosh(d)"]              = [[La hiperbola kosinuso de nombro d.]],
["asinh(x)"]             = [[La hiperbola sinusarko de nombro d.]],
["Print(...)"]           = [[Presi Lua tablo en uzanta formato, usi 'scienca' formon de nombro.]],
["Map(fn,t)"]            = [[Taksi funkcion por ĉiu elemento de la tablo.]],
["rand()"]               = [[Hazarda nombro inter 0 kaj 1.]],
["cos(d)"]               = [[La kosinuso de nombro d.]],
["Log(sFlag)"]           = [[Sesio-registrado al protokola dosiero. Uzu 'on' por komenci kaj 'off' por ĉesi.]],
["Run(sFile,[bInt=false])"] = [[Ekzekuti lua- aŭ note- skripton.]],
["tanh(d)"]              = [[Hiperbola tangento.]],
["randi(N)"]             = [[Hazarda entrejo de 1 al N.]],
["atanh(x)"]             = [[Hiperbola tangentarco de nombro.]],
["acos(d)"]              = [[La kosinusarko de nombro d.]],
["sqrt(dPos)"]           = [[Kvadrata radiko.]],
["abs(d)"]               = [[La absoluta valoro.]],
["tan(d)"]               = [[La tangento de nombro d.]],
["atan2(dy,dx)"]         = [[Tangentarco de nombro dy/dx kun signoj.]],
["_e"]                   = [[Eǔlera nombro.]],
["__module__"]           = [[Komputado sistemo bazita sur Lua.]],
},
---------- matrix.lua ----------
matrix = {
["norm()"]               = [[Eŭklida normo.]],
["pinv()"]               = [[Redonas pseǔdon-inversa matrico.]],
["rref()"]               = [[PGaǔsa transformo.]],
["tr()"]                 = [[Spuro de matrico.]],
["lu()"]                 = [[LU transformo de la matrico. Redonas L,U kaj P valoroj.]],
["map(fn)"]              = [[Apliki la funkcion fn(row[,col,val]) al ĉiuj elementoj, redoni novan matricon.]],
["round([N=6])"]         = [[Rondu nombron en loko.]],
["rank()"]               = [[Trovi rangon de la matrico.]],
["H()"]                  = [[Konjugaci transpon. ]],
["det()"]                = [[Matrico determinanto.]],
["qr()"]                 = [[QR transformo.]],
["dot(V)"]               = [[Skalara produkto de du vektoroj.]],
["range(tR,tC)"]         = [[Akiru submatricon por la donita gamo de vicoj kaj kolumnoj.]],
[" {tRow1,tRow2,..}"]    = [[Krei novan matricon de la listo de vicoj (tabloj).]],
["cross(V)"]             = [[Kruco produkto de du 3-elementa vektoroj.]],
["rows()"]               = [[Nombro da vicoj.]],
["concat(M,sDir)"]       = [[Kunmeti du matricoj, dir='h' - en horizontala directo, dir='v' - in vertikala direkto.
Uzi M1 .. M2 por horizontala kunmeto, kaj M1 // M2 por vertikala.]],
["copy()"]               = [[Krei kopion de la matrico.]],
["chol()"]               = [[Ĉoleska transformo de pozitiva simetria matrico.]],
["cols()"]               = [[Nombro da kolumnoj.]],
["table()"]              = [[Konverti al la simpla Lua tablo.]],
[":V({...})"]            = [[Krei vektoron el listo de nombroj.]],
[":eye(iRows,[iCols=iRows])"] = [[Krei identeca matrico.]],
["reshape([iRows=size,iCols=1])"] = [[Ŝanĝu matricon.]],
[":zip(fn,M1,M2,...)"]   = [[Apliki la funkcion al ĉiu elemento de matricoj.]],
[":zeros(rows,[cols=rows])"] = [[Krei nula matrico.]],
["inv()"]                = [[Redonas la inversa matrico.]],
["T()"]                  = [[Redonas la transposta matrico.]],
["diag()"]               = [[Ĉerpti la diagonalajn elementojn aǔ krei novan matricon kun donita diagonalo.]],
[":fill(iRows,iCols,[val=1])"] = [[Krei matricon kun la donita nombroj.]],
["eig()"]                = [[Trovu proprajn vektorojn kaj proprajn valorojn (matricoj).]],
["insert(tR,tC,M)"]      = [[Enigu duan matricon en la donitan gamon de indeksoj.]],
["__module__"]           = [[Operacioj kun matricoj. La matricoj estas maldensa defaǔlte.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^b, -a]],
["bidiag(M)"]            = [[Bidiagonaligo de matrico, revenas U, B, V.]],
["svd(M)"]               = [[Unuopa valormalkomponaĵo, reveno U, S, V.]],
--["comparison"]           = [[a==b, a~=b]],
[":givensRot(d1,d2)"]    = [[Trovu parametrojn de Givens-rotacio (c,s,r).]],
["householder(V,ik)"]    = [[Trovu Householder matricon por la donita vektoro.]],
},
---------- numeric.lua ----------
numeric = {
[":solve(fn,dA,dB)"]     = [[Trovu la radiko de ekvacio fn(x)=0 en la intervalo [a,b].]],
["TOL[=0.001]"]          = [[Precizeco de kalkuloj.]],
[":trapez(fn,a,b)"]      = [[Kalkuli la integralo uzante la metodon de trapezoj.]],
[":ode45(fn,tDelta,y0,[param])"] = [[Nombra solvo de ODE.
Se la paŝo dx ne estas specifita, tiam ĝi estas kalkulita aǔtomate laǔ la postulata precizeco.
Redonas liston de interaj punktoj kaj rezulton yn.]],
[":newton(fn,d0)"]       = [[Trovu la radiko de ekvacio uzante la metodon de Newton, x0 estas komenca proksimiĝo.]],
[":der(fn,x)"]           = [[Kalkuli derivaĵon de la funkcio.]],
["__module__"]           = [[Grupo de funkcioj por la numeraj kalkuloj. Toleremo estas difinita per TOL.]],
},
---------- polynomial.lua ----------
polynomial = {
[":build(root1,root2,...)"] = [[Kalkuli la polinomon per konataj radikoj.]],
[":taylor(v,vF,[vF',vF''..])"] = [[Akiru Taylor-serialon.]],
[":fit(tX,tY,N)"]        = [[Trovi la polinoman alproksimiĝon por la kurbo.]],
[":lin(tX,tY,[v0=0,vN=v0])"] = [[Lineara dateninterpolado. Revenas tabelon kun polinomoj.]],
[" {..,v1,v0}"]          = [[Krei novan poinoman.]],
["roots()"]              = [[Trovi la realajn kaj kompleksajn radikojn de polinomo.]],
[":ppval(tP,d,[N]"]      = [[Revenas valoron de peceta polinomo en la punkto, kaj la polinoma indekso.]],
["der()"]                = [[Trovi la derivaĵon de polinomo.]],
["int([d0=0])"]          = [[Trovi la integralo de polinomo, d0 - libera faktoro.]],
[":char(M)"]             = [[Trovu karakterizan polinomon por la matrico.]],
[":lagrange(tX,tY)"]     = [[Trovu interpola polinomon en la formo de Lagrange.]],
["val(v)"]               = [[Kalkulu la valoro de polinomo P je koordinato x. La sama al P(x).]],
[":spline(tX,tY)"]       = [[Kuba spline datuminterpolado. Revenas tabelon kun polinomoj.]],
["copy()"]               = [[Krei kopion de polinomo.]],
["real()"]               = [[Trovi la realajn radikojn de polinomo.]],
["__module__"]           = [[Operacioj kun polinomoj.]],
--["comparison"]           = [[a==b, a~=b]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^n, -a]],
},
---------- quaternion.lua ----------
quaternion = {
["mat()"]                = [[Ekvivalenta matrica reprezentado.]],
["rotate(vec)"]          = [[Apliki kvaternionon por turni la vektoron.]],
[":fromRot(M)"]          = [[Konverti rotacia matrico al kvaterniono.]],
["slerp(Q,f)"]           = [[Sfera linea interpolado.]],
["conj()"]               = [[Konjugacio.]],
["toAA()"]               = [[Akiri angulon kaj akson de rotacio.]],
["x()"]                  = [[x komponanto.]],
["im()"]                 = [[Akiri imaginan parton.]],
["toRot()"]              = [[Akiru egalan turnan matricon.]],
["abs()"]                = [[Valoro de la normo.]],
[" {w,x,y,z}"]           = [[Krei novan kvaternionon.]],
["y()"]                  = [[y komponanto.]],
["inv()"]                = [[Reversa kvaterniono.]],
["w()"]                  = [[Reala parto.]],
["z()"]                  = [[z komponanto.]],
[":fromAA(fAng,vAxe)"]   = [[Krei quaternionon por angulo kaj akso de rotacio.]],
["normalize()"]          = [[Redonas unuo-kvaterniono.]],
["re()"]                 = [[Reala parto de la kvaterniono.]],
["__module__"]           = [[Operacioj kun kvaternionoj.]],
--["comparison"]           = [[a == b, a ~= b]],
--["arithmetic"]           = [[a + b, a - b, a * b, a ^ k, -a]],
},
---------- rational.lua ----------
rational = {
["num()"]                = [[Numeratoro de racia nombro.]],
["eq(R)"]                = [[Egaleco kontrolo.]],
[":fromCont(t)"]         = [[Transformi daŭra frakcio al racian nombron.]],
["denom()"]              = [[Denominatoro de racia nombro.]],
[":from(f,[fErr=1E-3])"] = [[Taksas racian nombron el dekuma nombro.]],
["toCont()"]             = [[Transformi racian nombron al daŭra frakcio.]],
[" (m,[n=1])"]           = [[Krei novan racian nombron. m - numeratoro, n - denominatoro.]],
[":gcd(va,vb)"]          = [[Plej granda komuna divizoro.]],
["float()"]              = [[Revenas racia nombron en dekuma formo.]],
["__module__"]           = [[Komputadoj kun la raciaj nombroj.]],
--["comparison"]           = [[R1<R2, R1<=R2, R1>R2, R1>=R2, R1==R2, R1~=R2]],
--["arithmetic"]           = [[R1+R2, R1-R2, R1*R2, R1/R2, -R, R1^R2]],
},
---------- special.lua ----------
special = {
[":besselk(N,x)"]        = [[Modifita Bessel-funkcio Kn(x).]],
[":erf(x)"]              = [[Eraro funkcio.]],
[":erfc(x)"]             = [[Kompletiga eraro funkcio.]],
[":gammp(N,x)"]          = [[Nekompleta gama-funkcio P(N,x).]],
[":beta(z,w)"]           = [[Beta-funkcio.]],
[":gammainc(x,N,[type='lower'])"] = [[Nekompleta gamma funkcio, P (type=lower) or Q (type=upper).]],
[":dawson(x)"]           = [[Dawson integralo.]],
[":gammq(N,x)"]          = [[Nekompleta gama-funkcio Q(N,x) = 1-P(N,x).]],
[":betainc(x,a,b)"]      = [[Nekompleta beta-funkcio Ix(a,b).]],
[":gammaln(z)"]          = [[Naturala logaritmo de la gama-funkcio.]],
[":gamma(z)"]            = [[Gama-funkcio.]],
[":legendre(n,x)"]       = [[Listo de la Legendre polinomoj koeficientoj.]],
[":betaln(z,w)"]         = [[Naturala logaritmo de la beta-funkcio.]],
[":besselj(N,x)"]        = [[Bessel-funkcio de la unua speco.]],
[":besseli(N,x)"]        = [[Modifita Bessel-funkcio In(x).]],
[":expint(n,x)"]         = [[Eksponenta integralo En(x).]],
[":bessely(n,x)"]        = [[Bessel-funkcio de la dua speco.]],
["__module__"]           = [[Specialaj matematikaj funkcioj.]],
},
---------- symbolic.lua ----------
symbolic = {
[":func(sName)"]         = [[Redonu simbolan funkcion se ĝi estis difinita.]],
["eval([tEnv])"]         = [[Taksi simbolan esprimon kun la donita medio.]],
[":def(sName,tArgs,S)"]  = [[Difinu simbolan funkcion. S estas aŭ simbola esprimo aŭ Lua funkcio.]],
[" (v)"]                 = [[Kreu novan simbolan variablon.]],
[":parse(str)"]          = [[Akiru simbolan esprimon el linio.]],
["__module__"]           = [[Simbolaj kalkuloj.]],
},
---------- units.lua ----------
units = {
[" ([v,]s)"]             = [[Krei novan valoron kun unuoj de mezuro.]],
["value()"]              = [[Akiru objektovaloron. Same kiel #U.]],
["convert(s)"]           = [[Konvertu unu unuojn al alia, redonu novan objekton aŭ nulon.]],
["key()"]                = [[Akiru mezurunuojn.]],
["prefix"]               = [[Prefikso tablo.]],
["copy()"]               = [[Krei kopion de objecto.]],
[":setRule(s,U)"]        = [[Aldoni regulon por konverti unuojn de mezuro.]],
["__module__"]           = [[Operacioj kun unuoj de mezuroj.]],
--["comparison"]           = [[U1==U2, U1~=U2, U1<U2, U1<=U2, U1>U2, U1>=U2]],
--["arithmetic"]           = [[U1+U2, U1-U2, U1*U2, U1/U2, U1^N]],
},
}