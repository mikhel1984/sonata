---------- locale/eo.lng ----------
{
language = 'Esperanto',
authors  = [[Stanislav Mikhel]],
---------- dialog ----------
Dialog = {
["use_import"]           = [[Alvoku
  use 'modulo' aǔ use {'moduloA','moduloB' ...}
por akiri ekstrajn modulojn.]],
["done"]                 = [[Preta.]],
["intro"]                = [[-------- help([functio]) = akiri helpon -----------
---------- use([modulo]) = piliigi la funcionalidad
----------------- quit() = finu -------------------
]],
["alias"]                = [[Usu la alias '%s' aliri la modulo '%s'.]],
},
---------- main.lua ----------
Main = {
["__module__"]           = [[Komputado sistemo bazita sur Lua.]],
["exp(x)"]               = [[La eksponenta dependeco.]],
["atan2(y,x)"]           = [[Tangentarco de nombro y/x kun signoj.]],
["_pi"]                  = [[Nombro pi.]],
["asin(x)"]              = [[La sinusarko de nombro x.]],
["tan(x)"]               = [[La tangento de nombro x.]],
["tanh(x)"]              = [[Hiperbola tangento.]],
["atanh(x)"]             = [[Hiperbola tangentarco de nombro.]],
["lc.log(flag)"]        = [[Sesio-registrado al protokola dosiero. Uzu 'on'/true por komenci kaj 'off'/false por ĉesi.]],
["sin(x)"]               = [[La sinuso de nombro x.]],
["abs(x)"]               = [[La absoluta valoro.]],
["randi(N)"]             = [[Hazarda entrejo de 1 al N.]],
["lc.map(fn,tbl)"]       = [[Taksi funkcion por ĉiu elemento de la tablo.]],
["lc.print(...)"]        = [[Presi Lua tablo en uzanta formato, usi 'scienca' formon de nombro.]],
["cosh(x)"]              = [[La hiperbola kosinuso de nombro x.]],
["cos(x)"]               = [[La kosinuso de nombro x.]],
["sinh(x)"]              = [[Hyperbola sinuso.]],
["lc.range([from=1,]to[,step=1])"] = [[Produkti tablo kun vico de nombroj.]],
["lc.type(t)"]           = [[Montri objektan tipon.]],
["lc.round(x[,n=0])"]    = [[Rondu nombro, difini kvanto de dekumaj ciferoj.]],
["acos(x)"]              = [[La kosinusarko de nombro x.]],
["sqrt(a)"]              = [[Kvadrata radiko.]],
["randn()"]              = [[Normale distribuita hazarda nombro kun nula mezumo kaj varieco 1.]],
["rand()"]               = [[Hazarda nombro inter 0 kaj 1.]],
["_ans"]                 = [[Resulto de la lasta operacio.]],
["acosh(x)"]             = [[La hiperbola kosinusarko de nombro x.]],
["asinh(x)"]             = [[La hiperbola sinusarko de nombro x.]],
["_e"]                   = [[Eǔlera nombro.]],
["log(x)"]               = [[Natura logaritmo.]],
["lc.dsvWrite(fname,tbl[,delim=','])"] = [[Savi Lua tabulon kiel dosieron kun delimitilo disigita datumojn.]],
["lc.tblImport(fName)"]     = [[Importi Lua tabulo de la dosiero.]],
["lc.dsvRead(fName[,delim=','])"] = [[Legas datumojn disigitaj per delimitilo en la dosiero, revenas Lua tabulon.]],

},
---------- matrix.lua ----------
Mat = {
["__module__"]           = [[Operacioj kun matricoj. La matricoj estas maldensa defaǔlte.]],
["copy(M)"]              = [[Krei kopion de la matrico.]],
["rref(M)"]              = [[PGaǔsa transformo.]],
["fill(rows,cols,fn)"]   = [[Kreu matrico uzante la funkcio fn(r,c).]],
["norm(M)"]              = [[Eŭklida normo.]],
["randn(rows[,cols=rows])"] = [[Krei matricon de normale hazardaj nombroj kun nula mezumo kaj varieco 1.]],
["det(M)"]               = [[Matrico determinanto.]],
["zeros(rows[,cols=rows])"] = [[Krei nula matrico.]],
["chol(M)"]              = [[Ĉoleska transformo de pozitiva simetria matrico.]],
["apply(fn,M1,M2,...)"]  = [[Apliki la funkcion al ĉiu elemento de matricoj.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^b, -a]],
["size(M)"]              = [[Reveni numbron de vicoj kaj kolumnoj.]],
["diag(M[,n=0])"]        = [[Ĉerpti la diagonalajn elementojn aǔ krei novan matricon kun donita diagonalo. n estas delokigo.]],
["reshape(M,nRows[=size],nCols[=1])"] = [[Ŝanĝu matricon.]],
["transpose(M)"]         = [[Redonas la transposta matrico. La sama al T().]],
["map(M,fn)"]            = [[Apliki la funkcion fn(row[,col,val]) al ĉiuj elementoj, redoni novan matricon.]],
--["comparison"]           = [[a==b, a~=b]],
["cross(V1,V2)"]         = [[Kruco produkto de du 3-elementa vektoroj.]],
["Mat(...)"]             = [[Krei novan matricon de la listo de vicoj (tabloj).]],
["lu(M)"]                = [[LU transformo de la matrico. Redonas L,U kaj P valoroj.]],
["dot(V1,V2)"]           = [[Skalara produkto de du 3-elementa vektoroj.]],
["table(M)"]             = [[Konverti al la simpla Lua tablo.]],
["ones(rows[,cols=rows,val=1])"] = [[Kreu matricon plenigita de donita nombro.]],
["pinv(M)"]              = [[Redonas pseǔdon-inversa matrico.]],
["eye(rows[,cols=rows,init=1])"] = [[Krei identeca matrico.]],
["inv(M)"]               = [[Redonas la inversa matrico.]],
["tr(M)"]                = [[Spuro de matrico.]],
["concat(M1,M2,dir)"]    = [[Kunmeti du matricoj, dir='h' - en horizontala directo, dir='v' - in vertikala direkto.
Uzi M1 .. M2 por horizontala kunmeto, kaj M1 // M2 por vertikala.]],
["rand(rows[,cols=rows])"] = [[Krei matricon de hazardaj nombroj inter 0 kaj 1.]],
["randi([M],N,[rows],[cols=rows])"] = [[Krei matricon de entjeraj nombroj inter 1 kaj N.]],
["rank(M)"]              = [[Trovi rangon de la matrico.]],
},
---------- files.lua ----------
File = {
["__module__"]           = [[Rutinoj por labori kun datumja dosieroj kaj tekstoj.]],
["split(str,delim)"]     = [[Generas funkcion, kiu redonas partojn de la teksto apartigita per delimitilo.]],
["read(fName)"]          = [[Reveni dosieron kiel teksto.]],
},
---------- stat.lua ----------
Stat = {
["__module__"]           = [[Statistikaj kalkuloj. Datumoj devas esti reprezentita kiel tablo Lua.]],
["sum(t)"]               = [[Kalkuli sumon de ĉiuj elementoj.]],
["max(t)"]               = [[La plej granda nombro kaj ĝia indekso.]],
["freq(t)"]              = [[Revenas tablon kun la oftecoj de elementoj.]],
["harmmean(t[,w])"]      = [[Harmona meznombro.]],
["tcdf(x,nu)"]           = [[Akumula distribuo-funkcio de la Studento.]],
["std(t[,w])"]           = [[Norma devio kaj vario. Pezoj povas esti prenita en konto.]],
["histcounts(X[,rng=10])"] = [[Distribuado de nombroj per intertempoj. La gamo povas esti aro kun nombro aŭ listo de limoj.]],
["geomean(t[,w])"]       = [[La geometria meznombro.]],
["moment(n,x[,p])"]      = [[Momento de x kun n ordo, p estas listo de pezoj.]],
["mean(t[,w])"]          = [[Kalkuli averaĝo. Pezoj povas esti prenita en konto.]],
["tpdf(x,nu)"]           = [[Dissendo denseco de la Studento.]],
["min(t)"]               = [[La plej malgranda nombro kaj ĝia indekso.]],
["median(t)"]            = [[Meza de la listo.]],
},
---------- gnuplot.lua ----------
Gp = {
["__module__"]           = [[Interfaco por laborado kun Gnuplot de Lua.]],
["show(G)"]              = [[Konstrui funkcian grafeon. Parametroj estas specifita en Lua table G.]],
["tplot(t,[x,y1,y2..])"] = [[Grafikaĵo surbaze de tabelo, matrico aŭ dosiero. Laŭvolaj elementoj difinas kolumnojn.]],
["keys"]                 = [[  Priskribo de parametroj:
{math.sin, title='sin'}                      -- grafeon por Lua funkcio, aldoni priskribon
{'sin.dat', ln=1, lw=2}                      -- grafeon por datumndosieron, specifi koloron kaj dikecon
{tbl, with='lines'}                          -- grafeon por Lua tabulo, uzi linioj
title='Graph name'                           -- apudskribo
xrange={0,10}                                -- gamo x de 0 ĝis 10
yrange={-2,2}                                -- gamo y
zrange={0,5}                                 -- gamo z
trange={1,2}                                 -- gamo por parametria funkcio
xtitle='A', ytitle='B'                       -- aksaj nomoj
terminal='jpeg'                              -- savi la rezulton kiel jpeg bildon
output='my_plot.jpg'                         -- dosiernomo
parametric=true                              -- parametria grafeo
size='square'                                -- kvadrata bildo
polar=true                                   -- uzi polusa grafeo
grid='polar'                                 -- polusa koordinata sistemo
legend=false                                 -- malebligi priskribon
surface=true                                 -- tridimensia grafeo
samples=200                                  -- nombro da punktoj
raw='set pm3d'                               -- fiksi la Gnuplot parametrojn permane 
]],
["copy(G)"]              = [[Krei kopion la parametroj de grafeo.]],
["add(tCurve)"]          = [[Aldonu novan funkcion al la grafiko.]],
["surfplot(x1,y1,fn1,[nm,[x2,y2..]])"] = [[Grafikaĵo surfacan funkcion. 'x' kaj 'y' estas listoj de nombroj, 'fn' estas funkcio de du argumentoj, 'nm' estas la nomo.]],
["tpolar(t,[x,y1,y2..])"] = [[Polusa intrigo por tabelo, matrico aŭ dosiero. Laŭvolaj elementoj difinas kolumnojn.]],
["tsurf(t,[x1,y1,z1,z2..])"] = [[Grafikaĵo surfacan funkcion surbaze de tablo, matrico aŭ dosiero. Laŭvolaj elementoj difinas kolumnojn.]],
["Gp()"]                 = [[Krei tablon por 'Gnuplot'.]],
["polarplot(x1,y1,[nm,[x2,y2..]])"] = [[Grafikaĵo en polusaj koordinatoj. 'x' - listo de nombroj, 'y' - listo aŭ funkcio, 'nm' - kurba nomo.]],
["plot(x1,[y1,[nm,[x2,..]]])"] = [['x' - listo de nombroj, 'y' - listo aŭ funkcio, 'nm' - kurba nomo.]],
},
---------- array.lua ----------
Arr = {
["__module__"]           = [[Manipuladoj kun la tabelo de elementoj. Indeksado komencoj de unu. Indico estas tablo.]],
["rand(tSize)"]          = [[Redonas tabulon de hazarda nombroj inter 0 kaj 1.]],
["capacity(A)"]          = [[Maksimuma nombro da elementoj en la tabelo. La sama kiel #A.]],
["next(A)"]              = [[Revenas funkcion por preterpasi ĉiujn indicojn kaj valorojn.]],
["sub(A,tInd1,tInd2)"]   = [[Redonas la parton de tabelo limigita de 2 indicoj.]],
["copy(A)"]              = [[Kreu kopion de la tabelo.]],
["map(A,func)"]          = [[Aplikas funkcion al la tabelo. Redonas novan tabelon.]],
["isEqual(A1,A2)"]       = [[Kontroli egalecon de dimensioj.]],
["dim(A)"]               = [[Redonas dimension de la tabelo.]],
--["comparison"]           = [[a == b, a ~= b]],
["apply(func, ...)"]     = [[Aplikas funkcion al la valoroj de du tabeloj. Redonas novan tabelon.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, -a, a^b]],
["set(A,tInd,val)"]      = [[Aldonu valoro al la tabelo. Indico estas tablo.]],
["Arr(tSize)"]           = [[Krei malplenan tabelon. Dimensio estas tablo.]],
["concat(A1,A2,nAxis)"]  = [[Kombini tabeloj laǔ donita akso.]],
["get(A,tInd)"]          = [[Redonai elementon de tabelo.]],
},
---------- rational.lua ----------
Rat = {
["__module__"]           = [[Komputadoj kun la raciaj nombroj.]],
--["comparison"]           = [[R1<R2, R1<=R2, R1>R2, R1>=R2, R1==R2, R1~=R2]],
["gcd(a,b)"]             = [[Plej granda komuna divizoro.]],
["val(R)"]               = [[Revenas racia nombro en dekuma formo.]],
["De(R)"]                = [[Denominatoro de racia nombro.]],
--["arithmetic"]           = [[R1+R2, R1-R2, R1*R2, R1/R2, -R, R1^R2} ]],
["copy(R)"]              = [[Kreu kopion de la racia nombro.]],
["Rat(m[,n=1])"]         = [[Krei novan racian nombron. m - numeratoro, n - denominatoro.]],
["Nu(R)"]                = [[Numeratoro de racia nombro.]],
},
---------- units.lua ----------
Unit = {
["__module__"]           = [[Operacioj kun unuoj de mezuroj.]],
["Unit(v[,u])"]          = [[Krei novan valoron kun unuoj de mezuro.]],
["convert(v, units)"]    = [[Konvertas unuojn de mezuro, redonas novan objector aǔ nil. 'units' povas esti teksto aǔ funkcio. 
Operacio v['units'] redonas nur la nombro.]],
["copy(U)"]              = [[Krei kopion de objecto.]],
["add(U,rule)"]          = [[Aldoni regulon por konverti unuojn de mezuro.]],
--["comparison"]           = [[U1==U2, U1~=U2, U1<U2, U1<=U2, U1>U2, U1>=U2]],
--["arithmetic"]           = [[U1+U2, U1-U2, U1*u2, U1/U2, U1^n]],
["prefix"]               = [[Prefikso tablo.]],
},
---------- special.lua ----------
Spec = {
["__module__"]           = [[Specialaj matematikaj funkcioj.]],
["gammainc(x,a[,type='lower')"] = [[Nekompleta gamma funkcio, P (type=malsupra) or Q (type=supra).]],
["betainc(x,a,b)"]       = [[Nekompleta beta-funkcio Ix(a,b).]],
["gammp(a,x)"]           = [[Nekompleta gama-funkcio P(a,x).]],
["dawson(x)"]            = [[Dawson integralo.]],
["bessely(n,x)"]         = [[Bessel-funkcio de la dua speco.]],
["gammaln(z)"]           = [[Naturala logaritmo de la gama-funkcio.]],
["besselj(n,x)"]         = [[Bessel-funkcio de la unua speco.]],
["legendre(n,x)"]        = [[Listo de la Legendre polinomoj koeficientoj.]],
["erfc(x)"]              = [[Kompletiga eraro funkcio.]],
["gamma(z)"]             = [[Gama-funkcio.]],
["besselk(n,x)"]         = [[Modifita Bessel-funkcio Kn(x).]],
["erf(x)"]               = [[Eraro funkcio.]],
["beta(z,w)"]            = [[Beta-funkcio.]],
["besseli(n,x)"]         = [[Modifita Bessel-funkcio In(x).]],
["gammq(a,x)"]           = [[Nekompleta gama-funkcio Q(a,x) = 1-P(a,x).]],
["expint(n,x)"]          = [[Eksponenta integralo En(x).]],
["betaln(z,w)"]          = [[Naturala logaritmo de la beta-funkcio.]],
},
---------- numeric.lua ----------
Num = {
["__module__"]           = [[Grupo de funkcioj por la numeraj kalkuloj. Toleremo estas difinita per TOL.]],
["der(fn,x)"]            = [[Kalkuli derivaĵon de la funkcio.]],
["TOL[=0.001]"]          = [[Precizeco de kalkuloj.]],
["solve(fn,a,b)"]        = [[Trovu la radiko de ekvacio fn(x)=0 en la intervalo [a,b].]],
["ode45(fn,tDelta,y0[,param])"] = [[Nombra solvo de ODE.
Se la paŝo dx ne estas specifita, tiam ĝi estas kalkulita aǔtomate laǔ la postulata precizeco.
Redonas liston de interaj punktoj kaj rezulton yn.]],
["Newton(fn,x0)"]        = [[Trovu la radiko de ekvacio uzante la metodon de Newton, x0 estas komenca proksimiĝo.]],
["trapez(fn,a,b)"]       = [[Kalkuli la integralo uzante la metodon de trapezoj.]],
},
---------- bigint.lua ----------
Int = {
["__module__"]           = [[Operacioj kun la arbitraj longaj entjeroj.]],
["factorize(B)"]         = [[Listo de primaj faktoroj.]],
--["comparison"]           = [[a<b, a<=b, a>b, a>=b, a==b, a~=b]],
["val(N)"]               = [[Prezenti grandan entjeron en nombra formo se eble.]],
["eq(a,b)"]              = [[Egaleco kontrolo.]],
["Int(v)"]               = [[Krei novan arbitra longa entjero bazitan sur la nombro, teksto aǔ tablo.]],
["gcd(B1,B2)"]           = [[Plej granda komuna faktoro.]],
["isPrime(B[,method])"]  = [[Kontrolante numeron por simpleco. Metita metodo 'Fermat' por usi la etan teoremon de Fermat.]],
["random(B)"]            = [[Hazarda nombro de 0 al B.]],
["base(B)"]              = [[Radikso por nombro.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a%b, a^b, -a, #a]],
["copy(v)"]              = [[Krei kopion de granda entjero.]],
["fact(B)"]              = [[Revenas faktorialon de la ne indika entjera nombro n.]],
["rebase(B,base)"]       = [[Konvertu numbrom al nova numbrosistemo.]],
["abs(v)"]               = [[Absoluta valoro.]],
},
---------- const.lua ----------
_C = {
["__module__"]           = [[Iuj konstantaj valoroj.]],
["astro.pc"]             = [[Unu parsek.]],
["phy.e"]                = [[Electrono ŝarĝo.]],
["phy.sigma"]            = [[Konstanto de Stefan-Boltzmann.]],
["phy.NA"]               = [[Nombro de Avogadro.]],
["math.phi"]             = [[Ora proporcio.]],
["math.pi"]              = [[Ratio de cirkvarmo de rondo al ĝia diametro.]],
["phy.c"]                = [[Rapido de lumo.]],
["phy.Rinf"]             = [[Konstanto de Rydberg.]],
["phy.Vm"]               = [[Unu mole de ideala gaso volumo.]],
["phy.g"]                = [[Senpaga akcelo.]],
["phy.G"]                = [[Gravita konstanto.]],
["phy.k"]                = [[Konstanto de Boltzmann.]],
["remove(name)"]         = [[Forigi konstantan.]],
["add(name,value)"]      = [[Krei novan konstanton.]],
["math.e"]               = [[Bazo de la natura logaritmo.]],
["phy.h"]                = [[Konstanto de Planck.]],
["phy.R"]                = [[Universaa gaso konstanto.]],
["phy.mu0"]              = [[Magneta konstanto.]],
["phy.eps0"]             = [[Elektra konstanto.]],
["astro.ly"]             = [[Unu uma jaro.]],
},
---------- complex.lua ----------
Comp = {
["__module__"]           = [[Operacioj kun la kompleksaj nombroj.]],
["tanh(Z)"]              = [[Hyperbola tangento de kompleksa nombro.]],
["cos(Z)"]               = [[Kosinuso de kompleksa nombro.]],
["asin(Z)"]              = [[Sinusarko de kompleksa nombro.]],
["cosh(Z)"]              = [[Hyperbola kosinuso de kompleksa nombro.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^b, -a]],
["sqrt(Z)"]              = [[Kvadrata radiko. Rezulto povas esti vera aǔ imaginara nombro.]],
["atanh(Z)"]             = [[Hyperbola tangentarko de kompleksa nombro.]],
["trig(module,angle)"]   = [[Uzi geometria prezento por kompleksa nombro.]],
["acosh(Z)"]             = [[Hyperbola kosinusarko de kompleksa nombro.]],
["exp(Z)"]               = [[Kompleksa eksponento.]],
["_i"]                   = [[Kompleksa unuo.]],
["Comp([re=0],[im=0])"]  = [[Krei novan kompleksan nombron.]],
["conj(Z)"]              = [[Kompleksa konjugata nombro. Egale al ~Z.]],
["abs(Z)"]               = [[Redonas la modulo de kompleksa nombro.]],
["atan(Z)"]              = [[Tangentarko de complexa nombro.]],
["log(Z)"]               = [[Kompleksa logaritmo.]],
["tan(Z)"]               = [[Tangento de kompleksa nombro.]],
["asinh(Z)"]             = [[Hyperbola sinusarko de kompleksa nombro.]],
["acos(Z)"]              = [[Kompleksa kosinusarko.]],
["sinh(Z)"]              = [[Hyperbola sinuso de kompleksa nombro.]],
["copy(Z)"]              = [[Krei kopion de complexa nombro.]],
["angle(Z)"]             = [[Revenas la argumenton de kompleksa nombro.]],
["sin(Z)"]               = [[Kompleksa sinuso.]],
--["comparison"]           = [[a==b, a~=b]],
},
---------- quaternion.lua ----------
Quat = {
["__module__"]           = [[Operacioj kun kvaternionoj.]],
["rotate(Q,vec)"]        = [[Apliki kvaternionon por turni la vektoron.]],
["slerp(Q1,Q2,t)"]       = [[Sfera linea interpolado.]],
["toAA(Q)"]              = [[Akiri angulon kaj akson de rotacio.]],
["toRot(Q)"]             = [[Akiru egalan turnan matricon.]],
["mat(Q)"]               = [[Ekvivalenta matrica reprezentado.]],
--["arithmetic"]           = [[a + b, a - b, a * b, a ^ k, -a]],
["conj(Q)"]              = [[Konjugacio.]],
--["comparison"]           = [[a == b, a ~= b]],
["inv(Q)"]               = [[Reversa kvaterniono.]],
["real(Q)"]              = [[Reala parto de la kvaterniono (la sama kiel Q.w)).]],
["normalize(Q)"]         = [[Faru unuo-kvaterniono.]],
["fromAA(fAng,vAxe)"]    = [[Krei quaternionon por angulo kaj akso de rotacio.]],
["fromRot(M)"]           = [[Konverti rotacia matrico al kvaterniono.]],
["copy(t)"]              = [[Krei kopion de la kvaterniono.]],
["Quat(t={0,0,0,0})"]    = [[Krei novan kvaternionon.]],
["abs(Q)"]               = [[Valoro de la normo.]],
["imag(Q)"]              = [[Akiri imaginan parton.]],
},
---------- polynom.lua ----------
Poly = {
["__module__"]           = [[Operacioj kun polinomoj.]],
["build(root1,root2,...)"] = [[Kalkuli la polinomon per konataj radikoj.]],
["val(P,x)"]             = [[Kalkulu la valoro de polinomo P je koordinato x. La sama al P(x).]],
["int(P[,x0=0])"]        = [[Trovi la integralo de polinomo, x0 - libera faktoro.]],
["real(p)"]              = [[Trovi la realan radikojn de polinomo.]],
["fit(X,Y,ord)"]         = [[Trovi la polinoman alproksimiĝon por la kurbo.]],
["der(P)"]               = [[Trovi la derivaĵon de polinomo.]],
--["arithmetic"]           = [[a+b, a-b, a*b, a/b, a^n, -a]],
["Poly(...)"]            = [[Krei novan poinoman.]],
--["comparison"]           = [[a==b, a~=b]],
["copy(P)"]              = [[Krei kopion de polinomo.]],
},
---------- graph.lua ----------
Graph = {
["__module__"]           = [[Operacioj kun grafeoj. Nodo estas sola nomo. Rando estas tabulo de du nomoj.]],
["isDirected(G)"]        = [[Kontroli se la grafeo havas direktajn randojn.]],
["copy(G)"]              = [[Akiri copion de la grafeo.]],
["add(G,e)"]             = [[Aldoni novan nodo aŭ rando.]],
["remove(G,e)"]          = [[Forigi nodo aŭ rando de la grafeo.]],
["pathBF(G,start[,goal])"] = [[Trovi plej mallongan vojon uzanta Bellman-Ford algoritmon.]],
["edges(G)"]             = [[Listo de grafeaj randoj.]],
["isComplete(G)"]        = [[Kontroli plenecon de la grafeo.]],
["pathD(G,start[,goal])"] = [[Trovi plej mallongan vojon uzanta Dijkstra algoritmon.]],
["dfs(G,start,goal)"]    = [[Profundo unua serĉo. Reveni rezulto kaj trovita vojon.]],
["bfs(G,start,goal)"]    = [[Larĝa unua serĉo. Reveni rezulto kaj trovita vojon.]],
["nodes(G)"]             = [[Listo de nodoj.]],
["isWeighted(G)"]        = [[Kontrolu se la randoj havas pezon malsama al 1.]],
["isNegative(G)"]        = [[Kontrolu se la randoj havas negativaj pezoj.]],
["Graph(t)"]             = [[Krei novan grafeon.]],
},
}