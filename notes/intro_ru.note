-- Добро пожаловать в программу для математических расчётов Sonata!
-- Здесь представлено краткое руководство по работе.
-- Введите 'quit' для выхода. 
-- Нажмите "Enter" чтобы продолжить...
-- PAUSE

--	BASICS
-- Список функций может быть получен командой:
help()
-- PAUSE

-- Для получения справки о функции введите её имя
help(Round)
-- PAUSE

-- Кстати, это интерактивный режим работы.
-- Вы можете ввести допустимое в Lua выражение после '?>'
-- и получить результат. Например, попробуйте вызывать
-- справку для какой-либо функции.
-- PAUSE

-- Программа позволяет вычислять арифметические выражения
-- и использовать переменные.
x = 3
2*x^2+3*x+5
-- Доступны константы:
_pi
_e
-- Результат последнего расчёта сохраняется в переменной
_ans
-- PAUSE

-- Длинное выражение можно разделить на несколько строк 
-- с помощью обратного слэша. Для совместимости с Lua 
-- он может быть вынесен в комментарий.
1 + 2 + \
3 + 4
1 + 2 + --\
3 + 4
-- PAUSE 

--	MODULES
-- Дополнительные модули можно загрузить 
-- с помощью функции "use".
-- Вот список доступных модулей с указанием псевдонима
-- и текущего статуса:
help(use)
-- PAUSE 

-- Модуль можно загрузить командой 
--    use 'имя'
-- Затем он становится доступным через псевдоним.
use 'matrix'
a = Mat {{1,2},{3,4}}       -- новая матрица
-- Функции можно вызывать как методы класса
Mat.det(a)
-- или объекта
a:det()
-- PAUSE

-- Несколько модулей одновременно можно загрузить командой
--    use {'имя1','имя2'}
use {'complex', 'asciiplot'}
-- PAUSE

-- Также для загрузки можно использовать алиас модуля
use 'Num'
-- PAUSE

-- Чтобы загрузить все модули, вызовите
use 'all'
-- Введите 'use()' для проверки текущего статуса

-- PAUSE

-- Некоторые модули при загрузке изменяют окружение.
-- Например, модуль 'complex' делает доступной
-- комплексную переменную
_i
-- и изменяет поведение некоторых функций
sqrt(-4)
exp(3+_i*4)
-- PAUSE

-- Для получения информации о доступных модулях 
-- откройте 'modules.note'

-- Желаем вам приятной работы с программой!
